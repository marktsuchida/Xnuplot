Passing NumPy arrays to Gnuplot
===============================

These functions are only defined if NumPy is installed on your system.

.. module:: xnuplot


.. function:: array(arr[, options=None, coord_options=None, using=None])

   Given a NumPy array, return a plot item that uses Gnuplot's ``binary array``
   format (where ordinates are generated by Gnuplot and the user passes only
   the abscissae and other data point values).

   The returned object can be added to instances of :class:`xnuplot.Plot` or
   :class:`xnuplot.SPlot`.

   :arg numpy.array arr: an array with at least two dimensions

   :arg str options: Gnuplot plotting options (``axes``, ``title``, ``with``)

   :arg str coord_options: Gnuplot options for controlling coordinate
                           generation for ``binary array`` (``dx``, ``dy``,
                           ``dz``, ``flipx``, ``flipy``, ``flipz``, ``origin``,
                           ``center``, ``rotate``, and ``perpendicular``)

   :arg tuple using: indices along the last dimension of ``arr`` to use for 
                     the plot (corresponding to Gnuplot's ``using`` keyword)

   .. note::

      The indices in the ``using`` tuple are zero-based NumPy indices (axes),
      not one-based Gnuplot indices. For example, if ``arr.shape[-1]`` is equal
      to 3, then you could use *e.g.* ``using=(1, 0, 2)``. The generated
      coordinates (one dimension for a Plot, or two dimensions for an SPlot)
      are not referred to in this tuple.


.. function:: record(arr[, options=None, using=None])

   Given a NumPy array, return a plot item that uses Gnuplot's ``binary
   record`` format (where both ordinates and abscissae come from the data
   provided by the user).

   The returned object can be added to instances of :class:`xnuplot.Plot` or
   :class:`xnuplot.SPlot`.

   :arg numpy.array arr: an array with at least two dimensions

   :arg str options: Gnuplot plotting options (``axes``, ``title``, ``with``)

   :arg tuple using: indices along the last dimension of ``arr`` to use for
                     the plot (corresponding to Gnuplot's ``using`` keyword)

   .. note::

      The indices in the ``using`` tuple are zero-based NumPy indices (axes),
      not one-based Gnuplot indices. For example, if ``arr.shape[-1]`` is equal
      to 3, then you could use *e.g.* ``using=(1, 0, 2)``.


.. function:: matrix(arr, xcoords, ycoords[, options=None])

   Given a NumPy array, return a plot item that uses Gnuplot's
   ``binary matrix`` format (which represents an unequally-spaced rectangular
   grid).

   The returned object can be added to instances of :class:`xnuplot.Plot` or
   :class:`xnuplot.SPlot`.

   :arg numpy.array arr: a two-dimensional array containing the values for each
                         grid point

   :arg numpy.array xcoords: a one-dimensional array containing the x
                             coordinates for the grid points

   :arg numpy.array ycoords: a one-dimensional array containing the y
                             coordinates for the grid points

   :arg str options: Gnuplot plotting options (``axes``, ``title``, ``with``)

   .. note::

      ``arr.shape`` must equal ``(len(xcoords), len(ycoords))``.

   .. note::
   
      Because Gnuplot does not read data of this type sequentially, the plot
      item is always passed as a temporary file (as opposed to a pipe).

